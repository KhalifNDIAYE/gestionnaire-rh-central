name: Hotfix Deployment

on:
  push:
    branches: [ hotfix/** ]
  workflow_dispatch:
    inputs:
      hotfix_branch:
        description: 'Branche de hotfix Ã  dÃ©ployer'
        required: true
        type: string

jobs:
  # Tests rapides pour les hotfixes
  quick-test:
    name: Quick Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run critical tests only
      run: npm run test:unit -- --run --reporter=verbose tests/critical/
      
    - name: Run smoke tests
      run: npm run test:smoke

  # DÃ©ploiement d'urgence
  emergency-deploy:
    name: Emergency Deploy
    runs-on: ubuntu-latest
    needs: quick-test
    environment: production
    if: github.ref_name == 'hotfix/emergency' || contains(github.event.inputs.hotfix_branch, 'emergency')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build production
      run: npm run build:production
      
    - name: Create backup point
      run: |
        curl -X POST "${{ secrets.BACKUP_WEBHOOK_URL }}" \
          -H "Authorization: Bearer ${{ secrets.BACKUP_TOKEN }}" \
          -d '{"action": "emergency_backup", "reason": "hotfix_deployment"}'
      
    - name: Deploy hotfix
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
    - name: Verify hotfix deployment
      run: |
        sleep 30
        npm run test:health -- --baseUrl=https://yourapp.com
        
    - name: Notify hotfix deployment
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#alerts'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        text: 'ðŸš¨ HOTFIX DEPLOYED: ${{ github.ref_name }} - Status: ${{ job.status }}'

  # DÃ©ploiement standard de hotfix
  standard-hotfix-deploy:
    name: Standard Hotfix Deploy
    runs-on: ubuntu-latest
    needs: quick-test
    environment: production
    if: startsWith(github.ref_name, 'hotfix/') && !contains(github.ref_name, 'emergency')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: npm run test:unit
      
    - name: Build production
      run: npm run build:production
      
    - name: Deploy to staging first
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        alias-domains: staging.yourapp.com
        
    - name: Test on staging
      run: |
        sleep 30
        npm run test:smoke -- --baseUrl=https://staging.yourapp.com
        
    - name: Deploy to production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
    - name: Verify production deployment
      run: |
        sleep 30
        npm run test:health -- --baseUrl=https://yourapp.com